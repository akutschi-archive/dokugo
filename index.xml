<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DoKugo</title>
    <link>https://akutschi.github.io/dokugo/</link>
    <description>Recent content on DoKugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://akutschi.github.io/dokugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configuration</title>
      <link>https://akutschi.github.io/dokugo/documentation/dokugo/configuration/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/dokugo/configuration/</guid>
      <description>Now it&amp;rsquo;s time to configure your site. The configuration is done in the config.toml file. This file is located in the root of your Hugo project. After creating the directories like explained in the installation step your directory and file structure should look like the following one:
$ tree demodokugo/ demodokugo/ â”œâ”€â”€ config.toml &amp;lt;----- The configuration file â”œâ”€â”€ content â””â”€â”€ themes Overview The whole config.toml file is the following one:</description>
    </item>
    
    <item>
      <title>Content Creation and Organization</title>
      <link>https://akutschi.github.io/dokugo/documentation/dokugo/content/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/dokugo/content/</guid>
      <description>Default Folders The basic idea is that your content folder has three subfolders, the section folders:
 blog for blog articles, documentation for the content of several topics and projects for the description of projects.  Each folder can contain other folders. For example, the project folder can have folders for a Raspberry Pi cluster project, a home cinema project and an art project. Each project folder can contain multiple articles written in Markdown.</description>
    </item>
    
    <item>
      <title>Deployment with GitHub</title>
      <link>https://akutschi.github.io/dokugo/documentation/dokugo/deployment_github/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/dokugo/deployment_github/</guid>
      <description>Here we are not running hugo manually to create and publish the site as in the manual deployment. Instead we use GitHub Actions and publish on GitHub Pages.
Configuration For a successful deployment we have to adjust the config.toml. Just replace the baseURL with the correct URL.
baseURL = &amp;#34;https://username.github.io/repository/ Here you find some information for different types of GitHub Pages sites. The type decides which baseURL you have to use.</description>
    </item>
    
    <item>
      <title>Deployment with GitLab</title>
      <link>https://akutschi.github.io/dokugo/documentation/dokugo/deployment_gitlab/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/dokugo/deployment_gitlab/</guid>
      <description>This is even simpler than the deployment with GitHub. It&amp;rsquo;s just one file in the project root to run GitLab CI/CD and to deploy on GitLab Pages.
Configuration For a successful deployment we have to adjust the config.toml. Just replace the baseURL with the correct URL.
baseURL = &amp;#34;https://username.gitlab.io/repository/ Here you find some information for the different domain names for GitLab Pages. The type decides which baseURL you have to use.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://akutschi.github.io/dokugo/documentation/dokugo/installation/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/dokugo/installation/</guid>
      <description>This guide will help you to install Hugo and DoKugo. You will be pointed to the documents to configure and create content for your site. Finally you have to choose how to create the static site and to deploy it to the service of your choice.
Requirements Hugo The required minimum Hugo version can be found on the DoKugo site. To install Hugo, head to the release site and download the release for your Operating System and architecture.</description>
    </item>
    
    <item>
      <title>Manual Deployment</title>
      <link>https://akutschi.github.io/dokugo/documentation/dokugo/deployment_manual/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/dokugo/deployment_manual/</guid>
      <description>This very short guide will help you to generate your content with Hugo. You will get some hints how to deploy your website manually to your webhoster.
Deployment When you think you&amp;rsquo;re ready to publish something just run hugo:
$ hugo Start building sites â€¦ | EN -------------------+----- Pages | 7 Paginator pages | 0 Non-page files | 0 Static files | 9 Processed images | 0 Aliases | 0 Sitemaps | 1 Cleaned | 0 Total in 14 ms This command will create the public folder inside your project root.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://akutschi.github.io/dokugo/documentation/dokugo/introduction/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/dokugo/introduction/</guid>
      <description>A simple theme for technical documentation purposes.
Features  LaTeX with MathJax Mermaid - generation of diagrams and flowcharts Breadcrumbs Table of Contents for articles  Preview Theme with exampleSite Content Just visit https://akutschi.github.io/dokugo to preview this theme. But if you want to test this theme locally for playing around, just clone this repository with
git clone git@github.com:akutschi/dokugo.git and then
cd exampleSite hugo server --themesDir ../../ The output of the command above shows you the address, but usually you can find the page at http://localhost:1313/dokugo.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum, Part 3</title>
      <link>https://akutschi.github.io/dokugo/blog/lorem_ipsum_part_3/</link>
      <pubDate>Wed, 01 Apr 2020 11:11:13 -1100</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/blog/lorem_ipsum_part_3/</guid>
      <description>Donec nec mauris tortor. Morbi eros lorem, dictum sed risus sit amet, egestas pulvinar nisl. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur rhoncus ex est, eget finibus ipsum eleifend quis. Cras molestie tortor eros, at viverra tellus luctus eget. Curabitur a ipsum ac ex vestibulum consectetur at eget nulla. Quisque finibus, nunc in bibendum pulvinar, ligula purus volutpat massa, vel mollis orci ex non risus. Proin eget elit sed lacus tristique molestie quis aliquam orci.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum, Part 2</title>
      <link>https://akutschi.github.io/dokugo/blog/lorem_ipsum_part_2/</link>
      <pubDate>Wed, 01 Apr 2020 11:11:12 -1100</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/blog/lorem_ipsum_part_2/</guid>
      <description>Donec nec mauris tortor. Morbi eros lorem, dictum sed risus sit amet, egestas pulvinar nisl. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur rhoncus ex est, eget finibus ipsum eleifend quis. Cras molestie tortor eros, at viverra tellus luctus eget. Curabitur a ipsum ac ex vestibulum consectetur at eget nulla. Quisque finibus, nunc in bibendum pulvinar, ligula purus volutpat massa, vel mollis orci ex non risus. Proin eget elit sed lacus tristique molestie quis aliquam orci.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum, Part 1</title>
      <link>https://akutschi.github.io/dokugo/blog/lorem_ipsum_part_1/</link>
      <pubDate>Wed, 01 Apr 2020 11:11:11 -1100</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/blog/lorem_ipsum_part_1/</guid>
      <description>Donec nec mauris tortor. Morbi eros lorem, dictum sed risus sit amet, egestas pulvinar nisl. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur rhoncus ex est, eget finibus ipsum eleifend quis. Cras molestie tortor eros, at viverra tellus luctus eget. Curabitur a ipsum ac ex vestibulum consectetur at eget nulla. Quisque finibus, nunc in bibendum pulvinar, ligula purus volutpat massa, vel mollis orci ex non risus. Proin eget elit sed lacus tristique molestie quis aliquam orci.</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://akutschi.github.io/dokugo/documentation/emoji-support/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways. ðŸŽ†&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://akutschi.github.io/dokugo/documentation/placeholder-text/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de
pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://akutschi.github.io/dokugo/documentation/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://akutschi.github.io/dokugo/documentation/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using the third party JavaScript library MathJax.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mermaid diagrams</title>
      <link>https://akutschi.github.io/dokugo/documentation/mermaid/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/mermaid/</guid>
      <description>To get the following graph use the following code:
{{&amp;lt; mermaid &amp;gt;}} graph TD; A--&amp;gt;B; A--&amp;gt;C; B--&amp;gt;D; C--&amp;gt;D; {{&amp;lt; /mermaid &amp;gt;}} graph TD; A--B; A--C; B--D; C--D;  {{&amp;lt; mermaid &amp;gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{&amp;lt; /mermaid &amp;gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d  </description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://akutschi.github.io/dokugo/documentation/markdown-syntax/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akutschi.github.io/dokugo/documentation/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
